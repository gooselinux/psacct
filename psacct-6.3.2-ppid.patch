diff -up acct-6.3.2/dump-acct.c.pom acct-6.3.2/dump-acct.c
--- acct-6.3.2/dump-acct.c.pom	1997-10-14 02:28:36.000000000 +0200
+++ acct-6.3.2/dump-acct.c	2009-11-11 15:48:32.604436078 +0100
@@ -102,21 +102,43 @@ main (int argc, char *argv[])
   /* Dump the records. */
 
   {
-    struct acct *rec;
-    while ((rec = pacct_get_entry ()) != NULL)
-      {
-	if (raw)
-	  fwrite (rec, sizeof (struct acct), 1, stdout);
-	else
-	  print_pacct_record (rec, stdout);
-
-	if (num_lines_to_print > -1)
-	  {
-	    num_lines_to_print--;
-	    if (num_lines_to_print == 0)    /* max lines printed */
-	      exit (0);
-	  }
-      }
+    struct acct *rec;            /* the current record */
+    struct acct_v3 *rec_v3;      /* the current record in v3 structure 
+                                        the version tag could be switched to this version in kernel*/
+    void *a_struct;
+    int version;
+    
+    while ((a_struct = pacct_get_entry (&version)) != NULL)
+    {
+       if ((version % ACCT_BYTEORDER) != 3) {
+          rec = (struct acct *)a_struct;
+          if (raw)
+ 	    fwrite (rec, sizeof (struct acct), 1, stdout);
+ 	  else
+ 	    print_pacct_record (rec, stdout);
+ 
+          if (num_lines_to_print > -1)
+ 	  {
+ 	      num_lines_to_print--;
+ 	      if (num_lines_to_print == 0)    /* max lines printed */
+ 	        exit (0);
+ 	  }
+       } else {
+          rec_v3 = (struct acct_v3 *)a_struct;
+          if (raw)
+            fwrite (rec_v3, sizeof (struct acct_v3), 1, stdout);
+          else
+            print_pacct_record_v3 (rec_v3, stdout);
+ 
+          if (num_lines_to_print > -1)
+          {
+              num_lines_to_print--;
+              if (num_lines_to_print == 0)    /* max lines printed */
+                exit (0);
+          }
+       }
+       
+    }
 	
   }
 
diff -up acct-6.3.2/lastcomm.1.pom acct-6.3.2/lastcomm.1
--- acct-6.3.2/lastcomm.1.pom	2009-11-11 15:48:32.565435130 +0100
+++ acct-6.3.2/lastcomm.1	2009-11-11 15:48:32.605436227 +0100
@@ -45,6 +45,9 @@ lastcomm \-  print out information about
 .B \-\-debug
 ]
 [
+.B\-\-pid
+]
+[
 .B \-V
 |
 .B \-\-version 
@@ -129,6 +132,12 @@ Read from the file 
 instead of
 .I acct
 .TP
+.B \-\-pid
+add pid of the process and pid of the process parent to the output
+(pid is the last but one and parent pid the last column).
+These values are shown only when they are generated by acct function
+(depends on the version of kernel)
+.TP
 .B \-\-debug
 Print verbose internal information.
 .TP
diff -up acct-6.3.2/lastcomm.c.pom acct-6.3.2/lastcomm.c
--- acct-6.3.2/lastcomm.c.pom	2009-11-11 15:48:32.501435285 +0100
+++ acct-6.3.2/lastcomm.c	2009-11-12 11:40:20.351433210 +0100
@@ -66,6 +66,8 @@ int strict_match_flag = 0;	/* Nonzero if
 				   all items on the command line */
 int print_controls = 0;		/* don't print control characters */
 
+int print_pid = 0;              /* don't print process pids */
+
 char *program_name;		/* name of the program, for usage & errs */
 
 static unsigned int hzval;
@@ -86,7 +88,8 @@ int main PARAMS((int, char *[]));
 void give_usage PARAMS((void));
 void parse_entries PARAMS((void));
 char *devname PARAMS((long));
-int get_entry PARAMS((struct acct **));
+int get_entry PARAMS((int version, void *));
+
 int desired_entry PARAMS((char *, char *, char *));
 
 
@@ -120,6 +123,7 @@ main (int argc, char *argv[])
 	{ "user", required_argument, NULL, 7 },
 	{ "tty", required_argument, NULL, 8 },
 	{ "command", required_argument, NULL, 9 },
+	{ "pid", no_argument, NULL, 10},
 	{ 0, 0, 0, 0 }
       };
       
@@ -165,6 +169,9 @@ main (int argc, char *argv[])
 	    command_list = hashtab_init (0);
 	  hashtab_create (command_list, optarg, 0);
 	  break;
+	case 10:
+	  print_pid = 1;
+	  break;
 	case 'h':
 	case 3:
 	  /* This should fall through to default! */
@@ -232,7 +239,7 @@ give_usage (void)
 {
   char *usage = "\
 Usage: %s [-hV] [-f file] [command] ... [user] ... [terminal] ...\n\
-       [--file <file>] [--strict-match] [--print-controls]\n\
+       [--file <file>] [--strict-match] [--print-controls] [--pid]\n\
        [--user <name>] [--tty <name>] [--command <name>] [--debug]\n\
        [--version] [--help]\n\
 ";
@@ -245,94 +252,154 @@ Usage: %s [-hV] [-f file] [command] ... 
 void
 parse_entries (void)
 {
-  struct acct *rec;             /* the current record */
+  struct acct *rec = NULL;            /* the current record */
+  struct acct_v3 *rec_v3 = NULL;      /* the current record in v3 structure
+				    the version tag could be switched to this version in kernel*/
+  void *a_struct;
+  int version;
+  char flag;
   time_t btime;	/* Fix for call to ctime for 64bit architectures */
+  
+  char *this_uid;
+  char *this_dev;
+  double ut;
+  double st;
 
   /* loop while there are entries to be had */
-
-  while ((rec = pacct_get_entry ()) != NULL)
+  while ((a_struct = pacct_get_entry (&version)) != NULL)
     {
-      char *this_uid = uid_name (rec->ac_uid);
-      char *this_dev = devname ((long) rec->ac_tty);
-
-      if (debugging_enabled)
-	{
-	  fprintf (stddebug, "---------------------------------------------------------------------------\nCURRENT REC: ");
-	  print_pacct_record (rec, stddebug);
-	}
-
-      if (desired_entry (this_uid, this_dev, rec->ac_comm))
-	{
+      
+      if ((version % ACCT_BYTEORDER) != 3) {
+      
+        rec = (struct acct *)a_struct;
+        this_uid = uid_name (rec->ac_uid);
+        this_dev = devname ((long) rec->ac_tty);
+
+        if (debugging_enabled)
+        {
+          fprintf (stddebug, "---------------------------------------------------------------------------\nCURRENT REC: ");
+          print_pacct_record (rec, stddebug);
+        }
+
+        if (!(desired_entry (this_uid, this_dev, rec->ac_comm)))
+  	  continue; /* skip this record */
+  	
 #ifdef HAVE_COMP_T
-	  double ut = comp_t_2_double (rec->ac_utime);
-	  double st = comp_t_2_double (rec->ac_stime);
+	ut = comp_t_2_double (rec->ac_utime);
+	st = comp_t_2_double (rec->ac_stime);
 #else
-	  double ut = (double) rec->ac_utime;
-	  double st = (double) rec->ac_stime;
+   	ut = (double) rec->ac_utime;
+	st = (double) rec->ac_stime;
 #endif
 	  
-	  /* Make sure there are no unprintable characters in the
-             command name string. */
-	  
-	  if (! print_controls)
-	    {
-	      int i;
-	      for (i = 0; i < COMM_LEN; i++)
-		{
-		  if (rec->ac_comm[i] == '\0')
-		    break;
-		  if (! isprint (rec->ac_comm[i]))
-		    rec->ac_comm[i] = '?';
-		}
-	    }
+	/* Make sure there are no unprintable characters in the
+           command name string. */
+	if (! print_controls) {
+	  int i;
+	  for (i = 0; i < COMM_LEN; i++)
+	  {
+	    if (rec->ac_comm[i] == '\0')
+	      break;
+	    if (! isprint (rec->ac_comm[i]))
+	      rec->ac_comm[i] = '?';
+	  }
+	}
+	
+	printf ("%-*.*s ", COMM_LEN, COMM_LEN, rec->ac_comm);
+	
+	btime = (time_t) rec->ac_btime;
+	flag = rec->ac_flag;
 
-	  printf ("%-*.*s ", COMM_LEN, COMM_LEN, rec->ac_comm);
+      } else {
+        rec_v3 = (struct acct_v3 *)a_struct;
+        this_uid = uid_name (rec_v3->ac_uid);
+        this_dev = devname ((long) rec_v3->ac_tty);
+        if (debugging_enabled)
+        {
+          fprintf (stddebug, "---------------------------------------------------------------------------\nCURRENT REC: ");
+          print_pacct_record_v3 (rec_v3, stddebug);
+        }
+
+        if (!(desired_entry (this_uid, this_dev, rec_v3->ac_comm)))
+          continue; /* skip this record */
+
+#ifdef HAVE_COMP_T 
+        ut = comp_t_2_double (rec_v3->ac_utime);
+        st = comp_t_2_double (rec_v3->ac_stime);
+#else 
+        ut = (double) rec_v3->ac_utime;
+        st = (double) rec_v3->ac_stime;
+#endif 
+          /* Make sure there are no unprintable characters in the 
+             command name string. */
+        if (! print_controls) {
+          int i;
+          for (i = 0; i < COMM_LEN; i++)
+          {
+            if (rec_v3->ac_comm[i] == '\0')
+              break;
+            if (! isprint (rec_v3->ac_comm[i]))
+              rec_v3->ac_comm[i] = '?';
+          }
+        }
+        
+        printf ("%-*.*s ", COMM_LEN, COMM_LEN, rec_v3->ac_comm);
+        
+        
+        btime = (time_t) rec_v3->ac_btime;
+        flag = rec_v3->ac_flag;
+      }
+	
 
 #ifdef ASU
-	  if (rec->ac_flag & ASU)
-	    putchar ('S');
-	  else
+      if (flag & ASU)
+        putchar ('S');
+      else
 #endif
-	    putchar (' ');
+        putchar (' ');
 	  
 #ifdef AFORK
-	  if (rec->ac_flag & AFORK)
-	    putchar ('F');
-	  else
+      if (flag & AFORK)
+        putchar ('F');
+      else
 #endif
-	    putchar (' ');
+        putchar (' ');
 	  
 #ifdef ACOMPAT
-	  if (rec->ac_flag & ACOMPAT)
-	    putchar ('C');
-	  else
+      if (flag & ACOMPAT)
+        putchar ('C');
+      else
 #endif
-	    putchar (' ');
+        putchar (' ');
 	  
 #ifdef ACORE
-	  if (rec->ac_flag & ACORE)
-	    putchar ('D');
-	  else
+      if (flag & ACORE)
+        putchar ('D');
+      else
 #endif
-	    putchar (' ');
+        putchar (' ');
 	  
 #ifdef AXSIG
-	  if (rec->ac_flag & AXSIG)
-	    putchar ('X');
-	  else
+      if (flag & AXSIG)
+        putchar ('X');
+      else
 #endif
-	    putchar (' ');
-
-	  btime = (time_t) rec->ac_btime;
-	  printf (" %-8.8s %-8.8s %6.2f secs %-16.16s\n",
-		  this_uid, this_dev,
-		  ((ut + st) / (double) hzval),
-		  ctime (&btime));
-	}
+        putchar (' ');
+	  
+      if ((print_pid == 0) || ((version % ACCT_BYTEORDER) != 3)) {	  
+        printf (" %-8.8s %-8.8s %6.2f secs %-16.16s\n",
+  	    this_uid, this_dev,
+	    ((ut + st) / (double) hzval),
+	    ctime (&btime));
+      } else {
+        printf (" %-8.8s %-8.8s %6.2f secs %-16.16s %8d %8d\n",
+            this_uid, this_dev,
+            ((ut + st) / (double) hzval),
+            ctime (&btime), rec_v3->ac_pid, rec_v3->ac_ppid);
+      }
     }
 }
 
-
 
 /* Decide whether or not to print an entry. */
 
diff -up acct-6.3.2/pacct_rd.c.pom acct-6.3.2/pacct_rd.c
--- acct-6.3.2/pacct_rd.c.pom	2009-11-11 15:48:32.441446151 +0100
+++ acct-6.3.2/pacct_rd.c	2009-11-12 11:42:01.454436780 +0100
@@ -51,12 +51,19 @@ add_pacct_file (char *name)
 /* Do a buffered read of the file and return the next record in REC.
    Return 0 if no more entries. */
 
-struct acct *
-pacct_get_entry (void)
+void *
+pacct_get_entry (int *version)
 {
-  return (struct acct *) file_reader_get_entry (pacct_info);
-}
+  struct acct *rec;
 
+  rec = file_reader_get_entry (pacct_info);
+  if (rec != NULL)
+    version[0] = rec->ac_version;
+  else
+    version[0] = 0;
+    
+  return (void *)rec;
+}
 
 void
 print_pacct_record (struct acct *rec, FILE *out)
@@ -125,6 +132,75 @@ print_pacct_record (struct acct *rec, FI
 
 
 void
+print_pacct_record_v3 (struct acct_v3 *rec, FILE *out)
+{
+  /* Fix for call to ctime for 64bit architectures */
+  time_t btime = (time_t)rec->ac_btime;
+
+  fprintf (stddebug, "%-*.*s|", COMM_LEN, COMM_LEN, rec->ac_comm);
+
+#define NUM_FORMAT "%6.1f"
+
+#ifdef HAVE_ACUTIME
+  fprintf (stddebug, NUM_FORMAT "|",
+#ifdef ACUTIME_COMPT
+	   comp_t_2_double (rec->ac_utime)
+#else
+	   (double) rec->ac_utime
+#endif
+	   );
+#endif
+
+#ifdef HAVE_ACSTIME
+  fprintf (stddebug, NUM_FORMAT "|",
+#ifdef ACSTIME_COMPT
+	   comp_t_2_double (rec->ac_stime)
+#else
+	   (double) rec->ac_stime
+#endif
+	   );
+#endif
+
+#ifdef HAVE_ACETIME
+  fprintf (stddebug, NUM_FORMAT "|",
+#ifdef ACETIME_COMPT
+	   comp_t_2_double (rec->ac_etime)
+#else
+	   (double) rec->ac_etime
+#endif
+	   );
+#endif
+
+  fprintf (stddebug, "%5d|%5d|", rec->ac_uid, rec->ac_gid);
+
+#ifdef HAVE_ACMEM
+  fprintf (stddebug, NUM_FORMAT "|",
+#ifdef ACMEM_COMPT
+	   comp_t_2_double (rec->ac_mem)
+#else
+	   (double) rec->ac_mem
+#endif
+	   );
+#endif
+
+#ifdef HAVE_ACIO
+  fprintf (stddebug, NUM_FORMAT "|",
+#ifdef ACIO_COMPT
+	   comp_t_2_double (rec->ac_io)
+#else
+	   (double) rec->ac_io
+#endif
+	   );
+#endif
+
+  fprintf (out, "%8d %8d|", rec->ac_pid, rec->ac_ppid);
+
+  fprintf (stddebug, "%s", ctime (&btime));
+}
+
+
+
+void
 pacct_print_file_and_line (FILE *out)
 {
   file_reader_print_file_and_line (out, pacct_info);
diff -up acct-6.3.2/pacct_rd.h.pom acct-6.3.2/pacct_rd.h
--- acct-6.3.2/pacct_rd.h.pom	1997-10-14 02:28:36.000000000 +0200
+++ acct-6.3.2/pacct_rd.h	2009-11-12 11:33:22.129434634 +0100
@@ -8,14 +8,15 @@
 
 /* This looks strange, but it's real ANSI C. */
 
-static struct acct pacct_rd_never_used;
+static struct acct pacct_rd_never_used_v3;
 
-#define COMM_LEN ((int) sizeof (pacct_rd_never_used.ac_comm))
+#define COMM_LEN ((int) sizeof (pacct_rd_never_used_v3.ac_comm))
 
 void pacct_init PARAMS((int backwards));
 void add_pacct_file PARAMS((char *name));
-struct acct *pacct_get_entry PARAMS((void));
+void *pacct_get_entry PARAMS((int *version));
 void print_pacct_record PARAMS((struct acct *rec, FILE *out));
+void print_pacct_record_v3 PARAMS((struct acct_v3 *rec, FILE *out));
 void pacct_print_file_and_line PARAMS((FILE *out));
 
 #ifdef HAVE_COMP_T
diff -up acct-6.3.2/sa.c.pom acct-6.3.2/sa.c
--- acct-6.3.2/sa.c.pom	2009-11-11 15:48:32.462434362 +0100
+++ acct-6.3.2/sa.c	2009-11-12 11:51:39.515431392 +0100
@@ -132,6 +132,7 @@ struct user_data {
 
 struct hashtab *command_table;
 
+
 struct command_key {
   char comm[COMM_LEN];		/* command name */
   short fork_flag;		/* nonzero if fork but no exec */
@@ -1091,7 +1092,11 @@ usracct entries in `%s'\n\
 void
 parse_acct_entries (void)
 {
-  struct acct *rec;             /* the current record */
+  struct acct *rec;                   /* the current record */
+  struct acct_v3 *rec_v3 = NULL;      /* the current record in v3 structure 
+                                      the version tag could be switched to this version in kernel*/
+  void *a_struct;
+  int version;
 
   if (debugging_enabled)
     fprintf (stddebug, "\
@@ -1101,8 +1106,11 @@ acct entries\n\
 ");
 
   /* loop while there are entries to be had */
-  while ((rec = pacct_get_entry ()) != NULL)
-    {
+  while ((a_struct = pacct_get_entry (&version)) != NULL)
+  {
+    if ((version % ACCT_BYTEORDER) != 3) {
+      rec = (struct acct *)a_struct;
+      
 #ifdef HAVE_ACUTIME
 # ifdef ACUTIME_COMPT
       double ut = comp_t_2_double (rec->ac_utime) / (double) hzval;
@@ -1143,7 +1151,7 @@ acct entries\n\
 # endif
 #endif
 
-      if (print_users)
+       if (print_users)
 	{
 	  printf ("%-8.8s"
 #if defined(HAVE_ACUTIME) && defined(HAVE_ACSTIME)
@@ -1198,6 +1206,105 @@ acct entries\n\
 	  
 	  update_totals (&s);
 	}
+     } else {
+        rec_v3 = (struct acct_v3 *)a_struct;
+
+#ifdef HAVE_ACUTIME
+# ifdef ACUTIME_COMPT
+         double ut = comp_t_2_double (rec_v3->ac_utime) / (double) hzval;
+# else
+         double ut = (double) rec_v3->ac_utime / (double) hzval;
+# endif
+#endif
+
+#ifdef HAVE_ACSTIME
+# ifdef ACSTIME_COMPT
+         double st = comp_t_2_double (rec_v3->ac_stime) / (double) hzval;
+# else
+         double st = (double) rec_v3->ac_stime / (double) hzval;
+# endif
+#endif
+
+#ifdef HAVE_ACETIME
+# ifdef ACETIME_COMPT
+         double et = comp_t_2_double (rec_v3->ac_etime) / (double) hzval;
+# else
+         double et = (double) rec_v3->ac_etime / (double) hzval;
+# endif
+#endif
+
+#ifdef HAVE_ACIO
+# ifdef ACIO_COMPT
+         double di = comp_t_2_double (rec_v3->ac_io) / (double) hzval;
+# else
+         double di = (double) rec_v3->ac_io / (double) hzval;
+# endif
+#endif
+
+#ifdef HAVE_ACMEM
+# ifdef ACMEM_COMPT
+         double mu = PAGES_TO_KB (comp_t_2_double (rec_v3->ac_mem));
+# else
+         double mu = PAGES_TO_KB (rec_v3->ac_mem);
+# endif
+#endif
+
+         if (print_users)
+         {
+   	     printf ("%-8.8s"
+#if defined(HAVE_ACUTIME) && defined(HAVE_ACSTIME)
+		  " %6.2f cpu"
+#endif
+#if defined(HAVE_ACMEM)
+		  " %8.0fk mem"
+#endif
+#ifdef HAVE_ACIO
+		  " %6.0f io"
+#endif
+		  " %-*.*s%s\n",
+		  uid_name (rec->ac_uid),
+#if defined(HAVE_ACUTIME) && defined(HAVE_ACSTIME)
+		  ut + st,
+#endif
+#if defined(HAVE_ACMEM)
+		  mu,
+#endif
+#ifdef HAVE_ACIO
+		  di,
+#endif
+		  COMM_LEN, COMM_LEN, rec_v3->ac_comm,
+		  (rec_v3->ac_flag & AFORK) ? "*" : "");
+	   }
+         else
+   	 {
+	    struct stats s;
+
+	    s.num_calls = 1;
+#ifdef HAVE_ACUTIME
+	    s.user_time = ut;
+#endif
+#ifdef HAVE_ACSTIME
+	    s.sys_time = st;
+#endif
+#ifdef HAVE_ACETIME
+	    s.elapsed_time = et;
+#endif
+#ifdef HAVE_ACIO
+	    s.disk_io = di;
+#endif
+#ifdef HAVE_ACMEM
+	    s.mem_usage = mu;
+#endif
+	  
+	     if (NEED_SAVACCT_INFO)
+	       update_command_list (rec_v3->ac_comm, &s, (rec_v3->ac_flag & AFORK));
+
+	     if (NEED_USRACCT_INFO)
+	       update_user_list (uid_name (rec_v3->ac_uid), &s);
+	  
+	     update_totals (&s);
+	  }
+	}
     }
 }
 
@@ -1219,7 +1326,7 @@ update_command_list (char *comm, struct 
     }
   
   memset (&ck, 0, sizeof (ck));
-  strncpy (ck.comm, comm, COMM_LEN);
+  strncpy (ck.comm, comm, COMM_LEN);
   ck.fork_flag = fork_flag;
 
   he = hashtab_find (command_table, &ck, sizeof (ck));
